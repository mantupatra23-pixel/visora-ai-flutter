// ‚öôÔ∏è Visora AI Cloud ‚Äì Stable Flutter Gradle Configuration (Auto Plugin Detect)

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    // ‚úÖ Flutter plugin auto-detect (no version conflict)
    plugins {
        id "dev.flutter.flutter-gradle-plugin"
    }
}

// üß† Dynamically detect Flutter SDK path
def flutterSdkPath = System.getenv("FLUTTER_HOME")

if (flutterSdkPath == null || flutterSdkPath.isEmpty()) {
    try {
        def proc = ["bash", "-c", "which flutter"].execute()
        proc.waitFor()
        flutterSdkPath = proc.text.trim()
        if (flutterSdkPath.contains("/bin/flutter")) {
            flutterSdkPath = flutterSdkPath.replace("/bin/flutter", "")
        }
    } catch (Exception ignored) {
        flutterSdkPath = ""
    }
}

if (flutterSdkPath) {
    println("‚úÖ Flutter SDK detected at: $flutterSdkPath")
} else {
    println("‚ö†Ô∏è Flutter SDK not found ‚Äì skipping includeBuild.")
}

if (flutterSdkPath && new File(flutterSdkPath).exists()) {
    includeBuild(flutterSdkPath)
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

rootProject.name = "visora_ai_flutter"
include(":app")

def flutterPluginsFile = new File(rootDir, "../.flutter-plugins-dependencies")
if (flutterPluginsFile.exists()) {
    println("‚úÖ Flutter plugin dependencies file found: ${flutterPluginsFile}")
} else {
    println("‚ö†Ô∏è Flutter plugin dependencies missing, will regenerate automatically.")
}
