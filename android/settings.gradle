// ⚙️ Visora AI Cloud – Stable Flutter Gradle Configuration

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    // ✅ Add Flutter Gradle Plugin manually (for GitHub Cloud builds)
    plugins {
        id "dev.flutter.flutter-gradle-plugin" version "1.0.0"
    }
}

// 🧠 Dynamically detect Flutter SDK path in GitHub Runner or Local
def flutterSdkPath = System.getenv("FLUTTER_HOME")

// 🔁 Fallback for local or cloud builds
if (flutterSdkPath == null || flutterSdkPath.isEmpty()) {
    try {
        def proc = ["bash", "-c", "which flutter"].execute()
        proc.waitFor()
        flutterSdkPath = proc.text.trim()
        if (flutterSdkPath && flutterSdkPath.contains("/bin/flutter")) {
            flutterSdkPath = flutterSdkPath.replace("/bin/flutter", "")
        }
    } catch (Exception ignored) {
        flutterSdkPath = ""
    }
}

// 🧩 Print detected SDK path
if (flutterSdkPath) {
    println("✅ Flutter SDK detected at: " + flutterSdkPath)
} else {
    println("⚠️ No Flutter SDK found — skipping includeBuild. Ensure Flutter is installed.")
}

// 🧩 Include Flutter SDK only if valid
if (flutterSdkPath && new File(flutterSdkPath).exists()) {
    includeBuild(flutterSdkPath)
} else {
    println("⚠️ Skipped includeBuild — using global Flutter installation.")
}

// 🔧 Dependency management configuration
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

// 🏗️ Root project info
rootProject.name = "visora_ai_flutter"
include(":app")

// 🧾 Plugin dependency confirmation
def flutterPluginsFile = new File(rootDir, "../.flutter-plugins-dependencies")
if (flutterPluginsFile.exists()) {
    println("✅ Flutter plugin dependencies file found at: ${flutterPluginsFile}")
} else {
    println("⚠️ Flutter plugin dependencies missing, will regenerate automatically.")
}
