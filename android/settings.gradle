// ⚙️ Visora AI Cloud — Fully Stable Flutter Gradle Configuration (FINAL FIX)

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        // Flutter Gradle repository for plugin resolution
        maven { url "https://storage.googleapis.com/download.flutter.io" }
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://storage.googleapis.com/download.flutter.io" }
    }
}

rootProject.name = "visora_ai_flutter"
include(":app")

// ✅ Detect Flutter SDK Path (local + cloud)
def flutterSdkPath = System.getenv("FLUTTER_HOME") ?: "../../.."
if (flutterSdkPath && new File(flutterSdkPath).exists()) {
    println("✅ Flutter SDK found at: $flutterSdkPath")
    apply from: "$flutterSdkPath/packages/flutter_tools/gradle/app_plugin_loader.gradle"
} else {
    println("⚠️ Flutter SDK not found — trying default relative path...")
    apply from: "../../packages/flutter_tools/gradle/app_plugin_loader.gradle"
}

// ✅ Auto-include Flutter plugins
def flutterPluginsFile = new File(rootDir, "../.flutter-plugins-dependencies")
if (flutterPluginsFile.exists()) {
    println("✅ Found plugin dependency file: ${flutterPluginsFile}")
    try {
        def json = new groovy.json.JsonSlurper().parseText(flutterPluginsFile.text)
        json.plugins.each { plugin ->
            def name = plugin.name
            def path = plugin.path
            if (path && new File(path).exists()) {
                include(":$name")
                project(":$name").projectDir = new File(path)
                println("🔗 Linked plugin: $name")
            }
        }
    } catch (Exception e) {
        println("⚠️ Failed to parse .flutter-plugins-dependencies file: ${e.message}")
    }
} else {
    println("⚠️ No plugin dependency file found. Flutter will regenerate automatically.")
}
