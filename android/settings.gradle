// ‚öôÔ∏è Visora AI Cloud ‚Äì Flutter Gradle Configuration (Final Stable Build)

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        // ‚úÖ Add Flutter plugin repository manually
        maven { url "https://storage.googleapis.com/download.flutter.io" }
    }

    // ‚úÖ No explicit version, let Flutter handle it dynamically
    plugins {
        id "dev.flutter.flutter-gradle-plugin" apply false
    }
}

// üß† Auto-detect Flutter SDK path for both local & GitHub builds
def flutterSdkPath = System.getenv("FLUTTER_HOME")
if (flutterSdkPath == null || flutterSdkPath.isEmpty()) {
    try {
        def proc = ["bash", "-c", "which flutter"].execute()
        proc.waitFor()
        flutterSdkPath = proc.text.trim()
        if (flutterSdkPath.contains("/bin/flutter")) {
            flutterSdkPath = flutterSdkPath.replace("/bin/flutter", "")
        }
    } catch (Exception ignored) {
        flutterSdkPath = ""
    }
}

// ‚úÖ Print detected path
if (flutterSdkPath) {
    println("‚úÖ Flutter SDK detected at: $flutterSdkPath")
} else {
    println("‚ö†Ô∏è Flutter SDK not found ‚Äì build will use pre-installed runner SDK.")
}

// ‚úÖ Include Flutter SDK if valid
if (flutterSdkPath && new File(flutterSdkPath).exists()) {
    includeBuild(flutterSdkPath)
}

// ‚úÖ Dependency Management
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://storage.googleapis.com/download.flutter.io" }
    }
}

// ‚úÖ Root project
rootProject.name = "visora_ai_flutter"
include(":app")

// ‚úÖ Plugin dependency confirmation
def flutterPluginsFile = new File(rootDir, "../.flutter-plugins-dependencies")
if (flutterPluginsFile.exists()) {
    println("‚úÖ Flutter plugin dependencies found at: ${flutterPluginsFile}")
} else {
    println("‚ö†Ô∏è Flutter plugin dependencies missing; regenerating automatically.")
}
