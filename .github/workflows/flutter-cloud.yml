name: "Visora AI Cloud V4 – Fully Automatic Flutter Build"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1 – Checkout Repository
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      # ✅ Step 2 – Setup Flutter
      - name: 🧠 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.6"

      # ✅ Step 3 – Export Flutter Home (for GitHub Cloud)
      - name: ⚙️ Export Flutter Home
        run: echo "FLUTTER_HOME=$(which flutter | sed 's/\/bin\/flutter//')" >> $GITHUB_ENV

      # ✅ Step 4 – Auto Fix Dependency Versions
      - name: 🧩 Auto Fix Dependency Versions
        run: |
          echo "🔧 Checking and fixing dependencies..."
          flutter pub outdated || true
          sed -i s/translator:.*/translator:\ ^0.1.7/ pubspec.yaml || true
          flutter pub get
          echo "✅ Dependencies synced successfully!"

      # ✅ Step 5 – Recreate Android Folder (Fix Gradle Issue)
      - name: 🛠 Recreate Android folder (fix gradle issue)
        run: |
          echo "🧩 Checking Android directory..."
          if [ ! -d "android" ]; then
            echo "⚙️ Android folder missing — recreating now..."
            flutter create .
            echo "✅ Android folder recreated successfully."
          else
            echo "✅ Android folder already exists, skipping recreate."
          fi
          flutter pub get

      # ✅ Step 6 – Flutter Pub Get
      - name: 📥 Flutter Pub Get
        run: flutter pub get

      # ✅ Step 7 – Create Google Services JSON (Firebase)
      - name: 🔑 Create google-services.json from secret
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > android/app/google-services.json

      # ✅ Step 8 – Build Release APK
      - name: 🚀 Build Release APK
        run: |
          echo "🚀 Building Visora AI Cloud Release APK..."
          flutter build apk --release
          echo "✅ Build Completed Successfully!"

      # ✅ Step 9 – Upload APK Artifact to GitHub
      - name: ☁️ Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: VisoraAI-Cloud-Release
          path: build/app/outputs/flutter-apk/app-release.apk

      # ✅ Step 10 – Auto Release to GitHub (Downloadable APK)
      - name: 📦 Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/main')
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: v${{ github.run_number }}
          name: "Visora AI Cloud Build #${{ github.run_number }}"
          body: |
            ✅ Visora AI Cloud Auto Build Successful!
            🧠 Flutter SDK 3.19.6
            ⚙️ Android SDK 35
            🧩 Auto Dependency Fix
            ☁️ Ready for Download
