name: Visora AI Cloud V8.5 Final Stable

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FIREBASE_PROJECT_NUMBER: ${{ secrets.FIREBASE_PROJECT_NUMBER }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  RCLONE_CONF: ${{ secrets.RCLONE_CONF }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.6"
          channel: stable

      - name: Prepare Environment
        run: |
          mkdir -p .dart_tool
          flutter pub get || true
          echo "Flutter environment prepared."

      - name: Patch Gradle File
        run: |
          echo "Patching Gradle..."
          sed -i '/apply from/d' android/app/build.gradle || true
          cat <<'EOF' >> android/app/build.gradle
def localFlutterGradle = file('../packages/flutter_tools/gradle/flutter.gradle')
if (localFlutterGradle.exists()) {
  apply from: localFlutterGradle
} else {
  apply from: System.getenv('FLUTTER_ROOT') + '/packages/flutter_tools/gradle/flutter.gradle'
}
EOF
          echo "Gradle patch complete."

      - name: Install Dependencies
        run: |
          flutter clean
          flutter pub get
          flutter doctor -v
          echo "Dependencies installed."

      - name: Create Android Resources
        run: |
          mkdir -p android/app/src/main/res/mipmap-anydpi-v26
          mkdir -p android/app/src/main/res/values
          mkdir -p android/app/src/main/res/values-night
          cat > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml <<'EOF'
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
  <background android:drawable="@color/ic_launcher_background"/>
  <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>
EOF
          cat > android/app/src/main/res/values/colors.xml <<'EOF'
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <color name="ic_launcher_background">#1976D2</color>
  <color name="white">#FFFFFF</color>
  <color name="black">#000000</color>
</resources>
EOF
          cat > android/app/src/main/res/values/styles.xml <<'EOF'
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <style name="LaunchTheme" parent="android:Theme.Material.Light.NoActionBar">
    <item name="android:windowBackground">@color/white</item>
  </style>
</resources>
EOF
          echo "Android resources created."

      - name: Firebase Config
        run: |
          echo "Generating Firebase config..."
          cat > android/app/google-services.json <<EOF
{
  "project_info": {
    "project_number": "${FIREBASE_PROJECT_NUMBER}",
    "project_id": "${FIREBASE_PROJECT_ID}",
    "storage_bucket": "${FIREBASE_STORAGE_BUCKET}"
  },
  "client": [{
    "mobilesdk_app_id": "${FIREBASE_APP_ID}",
    "client_info": {
      "package_name": "com.example.visora_ai_flutter"
    },
    "api_key": [{
      "current_key": "${FIREBASE_API_KEY}"
    }]
  }],
  "configuration_version": "1"
}
EOF
          echo "Firebase config created."

      - name: Full Flutter Sync
        run: |
          echo "Cleaning and syncing dependencies..."
          rm -rf .dart_tool build pubspec.lock android/.gradle
          flutter clean
          flutter pub cache repair
          flutter pub get
          flutter pub upgrade --major-versions || true
          dart pub get || true
          dart run build_runner build --delete-conflicting-outputs || true
          flutter doctor -v
          echo "Flutter sync complete."

      - name: Build APK
        run: |
          echo "Configuring Gradle properties..."
          echo "org.gradle.jvmargs=-Xmx6g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> android/gradle.properties
          echo "org.gradle.daemon=false" >> android/gradle.properties
          echo "android.enableDexingArtifactTransform=false" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          flutter build apk --release --no-tree-shake-icons --verbose || (
            echo "Retrying build after clean..."
            flutter clean
            flutter pub get
            flutter build apk --release --no-tree-shake-icons --verbose
          )
          echo "APK build complete."

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: VisoraAI-Cloud-Release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Cloud Backup
        if: ${{ env.RCLONE_CONF != '' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y rclone
          mkdir -p ~/.config/rclone
          echo "${RCLONE_CONF}" > ~/.config/rclone/rclone.conf
          rclone copy build/app/outputs/flutter-apk/app-release.apk "mydrive:VisoraAI-Cloud" || true
          echo "Cloud backup done."

      - name: Publish to GitHub Releases
        if: startsWith(github.ref, 'refs/heads/main')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: v${{ github.run_number }}
          name: Visora AI Cloud Build #${{ github.run_number }}
          body: |
            Visora AI Cloud Build Successful
            Self-Healing Build System
            Firebase Ready
            Gradle 8.x + Kotlin 1.9.25
            Full Cloud Compatible
