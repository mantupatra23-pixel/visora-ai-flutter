name: "Visora AI Cloud V8.0 – CloudRoot AutoFix Build (100% Cloud Compatible)"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ✅ Step 1 - Checkout Repository
    - name: 📦 Checkout Repository
      uses: actions/checkout@v4

    # ✅ Step 2 - Setup Flutter SDK
    - name: 🧩 Setup Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.19.6"

    # ✅ Step 3 - Repair Flutter Root Path (Cloud Fix)
    - name: 🧠 Repair Flutter Root Path
      run: |
        echo "🔍 Checking flutter.gradle path..."
        FLUTTER_PATH=$(which flutter)
        FLUTTER_ROOT=$(dirname $(dirname $FLUTTER_PATH))
        echo "📍 Flutter Root detected at: $FLUTTER_ROOT"

        if [ ! -f "$FLUTTER_ROOT/packages/flutter_tools/gradle/flutter.gradle" ]; then
          echo "⚠️ flutter.gradle not found, recreating link..."
          mkdir -p android/gradle/flutter_tools/gradle
          cp -r $FLUTTER_ROOT/packages/flutter_tools/gradle/flutter.gradle android/gradle/flutter_tools/gradle/flutter.gradle || true
        fi

        echo "✅ Flutter Gradle path ready for cloud build."

    # ✅ Step 4 - Fix android/app/build.gradle (auto insert fallback)
    - name: 🧩 Patch Gradle Build File (Cloud Safe)
      run: |
        echo "🧩 Patching android/app/build.gradle..."
        if ! grep -q "flutter.gradle" android/app/build.gradle; then
          echo 'apply from: "../gradle/flutter_tools/gradle/flutter.gradle"' >> android/app/build.gradle
          echo "✅ flutter.gradle path added."
        else
          echo "✅ flutter.gradle path already present."
        fi

    # ✅ Step 5 - Dependencies
    - name: 🔄 Install Dependencies
      run: |
        flutter pub get
        echo "✅ Dependencies installed!"

    # ✅ Step 6 - Auto Create Android Resources (Icon + Theme)
    - name: 🎨 Auto Create Android Resources
      run: |
        mkdir -p android/app/src/main/res/mipmap-anydpi-v26
        mkdir -p android/app/src/main/res/values
        mkdir -p android/app/src/main/res/values-night

        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">
          <background android:drawable=\"@color/ic_launcher_background\"/>
          <foreground android:drawable=\"@mipmap/ic_launcher_foreground\"/>
        </adaptive-icon>" > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml

        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <resources>
          <color name=\"ic_launcher_background\">#1976D2</color>
          <color name=\"white\">#FFFFFF</color>
          <color name=\"black\">#000000</color>
        </resources>" > android/app/src/main/res/values/colors.xml

        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <resources>
          <style name=\"LaunchTheme\" parent=\"android:Theme.Material.Light.NoActionBar\">
            <item name=\"android:windowBackground\">@color/white</item>
          </style>
        </resources>" > android/app/src/main/res/values/styles.xml

        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <resources>
          <style name=\"LaunchTheme\" parent=\"android:Theme.Material.NoActionBar\">
            <item name=\"android:windowBackground\">@color/black</item>
          </style>
        </resources>" > android/app/src/main/res/values-night/styles.xml

        echo "✅ Android resources ready!"

    # ✅ Step 7 - Firebase Config from Secrets
    - name: 🔐 Generate Firebase Config (Secrets)
      run: |
        echo "{
          \"project_info\": {
            \"project_number\": \"${{ secrets.FIREBASE_PROJECT_NUMBER }}\",
            \"project_id\": \"${{ secrets.FIREBASE_PROJECT_ID }}\",
            \"storage_bucket\": \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"
          },
          \"client\": [{
            \"client_info\": {
              \"mobilesdk_app_id\": \"${{ secrets.FIREBASE_APP_ID }}\",
              \"android_client_info\": {\"package_name\": \"com.example.visora_ai_flutter\"}
            },
            \"api_key\": [{\"current_key\": \"${{ secrets.FIREBASE_API_KEY }}\"}]
          }],
          \"configuration_version\": \"1\"
        }" > android/app/google-services.json
        echo "✅ Firebase Config added!"

    # ✅ Step 8 - Build APK (Retry Safe)
    - name: 🚀 Build Release APK (Cloud Safe)
      run: |
        flutter build apk --release || (flutter clean && flutter pub get && flutter build apk --release)
        echo "🎯 Build completed successfully!"

    # ✅ Step 9 - Upload Artifact
    - name: 📤 Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: VisoraAI-Cloud-Release
        path: build/app/outputs/flutter-apk/app-release.apk

    # ✅ Step 10 - Publish to GitHub Release
    - name: 🚀 Publish to GitHub Releases
      if: startsWith(github.ref, 'refs/heads/main')
      uses: softprops/action-gh-release@v1
      with:
        files: build/app/outputs/flutter-apk/app-release.apk
        tag_name: v${{ github.run_number }}
        name: "Visora AI Cloud Build #${{ github.run_number }}"
        body: |
          ☁️ Visora AI Cloud V8.0 Build Successful!
          🧠 FlutterRoot AutoFix Enabled
          🎨 Icon + Theme Configured
          🔐 Firebase Integrated
          💙 100% Cloud Safe
