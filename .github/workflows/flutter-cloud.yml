name: "Visora AI Cloud V7.9 – Fully Stable Build (Icon + Theme + Firebase)"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ✅ Step 1 - Checkout Repository
    - name: 📦 Checkout Repository
      uses: actions/checkout@v4

    # ✅ Step 2 - Setup Flutter SDK
    - name: 🧩 Setup Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.19.6"

    # ✅ Step 3 - Prepare Dependencies
    - name: 🔄 Install Dependencies
      run: |
        flutter pub get
        echo "✅ Dependencies installed!"

    # ✅ Step 4 - Gradle Safety Patch
    - name: 🛠 Apply Gradle Safe Patch
      run: |
        echo "
        gradle.settingsEvaluated {
          System.setProperty('org.gradle.caching', 'true')
          System.setProperty('org.gradle.parallel', 'true')
          System.setProperty('org.gradle.jvmargs', '-Xmx3g -Dfile.encoding=UTF-8')
        }" >> android/settings.gradle
        echo "✅ Gradle settings optimized."

    # ✅ Step 5 - Auto Create Android Resource Files (Launcher + Colors + Styles)
    - name: 🧩 Auto Create Android Resources
      run: |
        echo "🎨 Creating Android launcher + theme resources..."

        mkdir -p android/app/src/main/res/mipmap-anydpi-v26
        mkdir -p android/app/src/main/res/mipmap-hdpi
        mkdir -p android/app/src/main/res/mipmap-mdpi
        mkdir -p android/app/src/main/res/mipmap-xhdpi
        mkdir -p android/app/src/main/res/values
        mkdir -p android/app/src/main/res/values-night

        # Default launcher icon XML
        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">
            <background android:drawable=\"@color/ic_launcher_background\"/>
            <foreground android:drawable=\"@mipmap/ic_launcher_foreground\"/>
        </adaptive-icon>" > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml

        # Launcher background color
        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <resources>
            <color name=\"ic_launcher_background\">#1976D2</color>
            <color name=\"white\">#FFFFFF</color>
            <color name=\"black\">#000000</color>
        </resources>" > android/app/src/main/res/values/colors.xml

        # Light theme
        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <resources>
            <style name=\"LaunchTheme\" parent=\"android:Theme.Material.Light.NoActionBar\">
                <item name=\"android:windowBackground\">@color/white</item>
            </style>
            <style name=\"NormalTheme\" parent=\"android:Theme.Material.NoActionBar\">
                <item name=\"android:windowBackground\">@color/white</item>
            </style>
        </resources>" > android/app/src/main/res/values/styles.xml

        # Night theme
        echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
        <resources>
            <style name=\"LaunchTheme\" parent=\"android:Theme.Material.NoActionBar\">
                <item name=\"android:windowBackground\">@color/black</item>
            </style>
        </resources>" > android/app/src/main/res/values-night/styles.xml

        echo "✅ Android launcher and themes configured successfully!"

    # ✅ Step 6 - Firebase Config
    - name: 🔐 Generate Firebase Config from Secrets
      run: |
        echo "{
          \"project_info\": {
            \"project_number\": \"${{ secrets.FIREBASE_PROJECT_NUMBER }}\",
            \"project_id\": \"${{ secrets.FIREBASE_PROJECT_ID }}\",
            \"storage_bucket\": \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"
          },
          \"client\": [{
            \"client_info\": {
              \"mobilesdk_app_id\": \"${{ secrets.FIREBASE_APP_ID }}\",
              \"android_client_info\": {
                \"package_name\": \"com.example.visora_ai_flutter\"
              }
            },
            \"api_key\": [{
              \"current_key\": \"${{ secrets.FIREBASE_API_KEY }}\"
            }]
          }],
          \"configuration_version\": \"1\"
        }" > android/app/google-services.json
        echo "✅ Firebase Config added!"

    # ✅ Step 7 - Asset Directories
    - name: 🧾 Ensure Assets Exist
      run: |
        mkdir -p assets/logo assets/icons assets/lottie assets/images
        touch assets/logo/.keep assets/icons/.keep assets/lottie/.keep assets/images/.keep
        echo "✅ Asset directories verified."

    # ✅ Step 8 - Build APK (Retry Safe)
    - name: 🚀 Build Release APK (Retry Safe)
      run: |
        echo "🏗️ Building Visora AI Cloud Release..."
        flutter build apk --release || (flutter clean && flutter pub get && flutter build apk --release)
        echo "🎯 Build Completed Successfully!"

    # ✅ Step 9 - Upload APK
    - name: 📤 Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: VisoraAI-Cloud-Release
        path: build/app/outputs/flutter-apk/app-release.apk

    # ✅ Step 10 - Publish to GitHub Releases
    - name: 🚀 Publish to GitHub Releases
      if: startsWith(github.ref, 'refs/heads/main')
      uses: softprops/action-gh-release@v1
      with:
        files: build/app/outputs/flutter-apk/app-release.apk
        tag_name: v${{ github.run_number }}
        name: "Visora AI Cloud Build #${{ github.run_number }}"
        body: |
          ☁️ Visora AI Cloud Auto Build Successful!
          🧩 Icon + Theme Auto Fixed
          🔐 Firebase Config via Secrets
          ⚙️ Flutter SDK: 3.19.6
          💙 CI Build Optimized
          🏁 Version v${{ github.run_number }}
