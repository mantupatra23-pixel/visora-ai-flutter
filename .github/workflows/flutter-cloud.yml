name: "Visora AI Cloud V8.3.3 – Final Stable"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.6"

      - name: Prepare Flutter Environment
        run: |
          mkdir -p .dart_tool
          flutter pub get
          echo "✅ Environment ready."

      - name: Patch Gradle File
        run: |
          echo "🧱 Patching Gradle..."
          echo "def localFlutterGradle = file('../packages/flutter_tools/gradle/flutter.gradle')" >> android/app/build.gradle
          echo "if (localFlutterGradle.exists()) {" >> android/app/build.gradle
          echo "  apply from: localFlutterGradle" >> android/app/build.gradle
          echo "} else {" >> android/app/build.gradle
          echo "  apply from: System.getenv('FLUTTER_ROOT') + '/packages/flutter_tools/gradle/flutter.gradle'" >> android/app/build.gradle
          echo "}" >> android/app/build.gradle
          echo "✅ Gradle patch done."

      - name: Install Dependencies
        run: |
          flutter clean
          flutter pub get
          flutter doctor -v

      - name: Create Android Resources
        run: |
          mkdir -p android/app/src/main/res/mipmap-anydpi-v26
          mkdir -p android/app/src/main/res/values
          echo '<?xml version="1.0" encoding="utf-8"?>
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/ic_launcher_background"/>
            <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
          </adaptive-icon>' > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
          echo '<?xml version="1.0" encoding="utf-8"?>
          <resources>
            <color name="ic_launcher_background">#1976D2</color>
            <color name="white">#FFFFFF</color>
            <color name="black">#000000</color>
          </resources>' > android/app/src/main/res/values/colors.xml
          echo '<?xml version="1.0" encoding="utf-8"?>
          <resources>
            <style name="LaunchTheme" parent="android:Theme.Material.Light.NoActionBar">
              <item name="android:windowBackground">@color/white</item>
            </style>
          </resources>' > android/app/src/main/res/values/styles.xml
          echo "✅ Android resources created."

      - name: Firebase Config
        env:
          FIREBASE_PROJECT_NUMBER: ${{ secrets.FIREBASE_PROJECT_NUMBER }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        run: |
          echo "🔥 Creating Firebase config..."
          echo "{
            \"project_info\": {
              \"project_number\": \"$FIREBASE_PROJECT_NUMBER\",
              \"project_id\": \"$FIREBASE_PROJECT_ID\",
              \"storage_bucket\": \"$FIREBASE_STORAGE_BUCKET\"
            },
            \"client\": [{
              \"client_info\": {
                \"mobilesdk_app_id\": \"$FIREBASE_APP_ID\",
                \"android_client_info\": {\"package_name\": \"com.example.visora\"}
              },
              \"api_key\": [{\"current_key\": \"$FIREBASE_API_KEY\"}]
            }],
            \"configuration_version\": \"1\"
          }" > android/app/google-services.json
          echo "✅ Firebase config ready."

      - name: Build APK
        run: |
          flutter build apk --release --no-tree-shake-icons || (flutter clean && flutter pub get && flutter build apk --release)
          echo "✅ APK build done."

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: VisoraAI-Cloud-Release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Cloud Backup (Optional)
        if: ${{ secrets.RCLONE_CONF != '' }}
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        run: |
          sudo apt-get install -y rclone
          echo "$RCLONE_CONF" > ~/.config/rclone/rclone.conf
          rclone copy build/app/outputs/flutter-apk/app-release.apk "mydrive:/VisoraAI/CloudBuilds/"
          echo "☁️ Cloud backup complete."

      - name: Publish to GitHub Releases
        if: startsWith(github.ref, 'refs/heads/main')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: v${{ github.run_number }}
          name: "Visora AI Cloud Build #${{ github.run_number }}"
          body: |
            ✅ Visora AI Cloud Build Successful!
            🔹 Firebase Ready
            🔹 Gradle 8.x + Kotlin 1.9.25
            🔹 Cloud Compatible
