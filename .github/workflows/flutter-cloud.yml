name: "Visora AI Cloud V8.3.1 – Final Stable (Full Auto + Cloud Backup)"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.6"
          channel: "stable"

      - name: Ensure Dart Tool Exists
        run: |
          mkdir -p .dart_tool
          flutter pub get || true
          echo "✅ .dart_tool and dependencies initialized."

      - name: Patch Gradle File
        run: |
          echo "🧱 Patching build.gradle..."
          if ! grep -q "flutter_tools/gradle/flutter.gradle" android/app/build.gradle; then
            cat <<'EOF' >> android/app/build.gradle
def localFlutterGradle = file("../packages/flutter_tools/gradle/flutter.gradle")
if (localFlutterGradle.exists()) {
  apply from: localFlutterGradle
} else {
  apply from: System.getenv('FLUTTER_ROOT') + '/packages/flutter_tools/gradle/flutter.gradle'
}
EOF
          fi
          echo "✅ build.gradle patched successfully."

      - name: Install Dependencies
        run: |
          flutter pub cache repair
          flutter clean
          flutter pub get
          flutter doctor -v
          echo "✅ Dependencies installed and cache fixed."

      - name: Create Android Resources
        run: |
          mkdir -p android/app/src/main/res/mipmap-anydpi-v26
          mkdir -p android/app/src/main/res/values
          cat <<'EOF' > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
  <background android:drawable="@color/ic_launcher_background"/>
  <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>
EOF
          cat <<'EOF' > android/app/src/main/res/values/colors.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <color name="ic_launcher_background">#1976D2</color>
  <color name="white">#FFFFFF</color>
  <color name="black">#000000</color>
</resources>
EOF
          cat <<'EOF' > android/app/src/main/res/values/styles.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <style name="LaunchTheme" parent="android:Theme.Material.Light.NoActionBar">
    <item name="android:windowBackground">@color/white</item>
  </style>
</resources>
EOF
          echo "✅ Android icons & themes created."

      - name: Firebase Config
        run: |
          echo "🔥 Generating Firebase config..."
          echo "{
            \"project_info\": {
              \"project_number\": \"${{ secrets.FIREBASE_PROJECT_NUMBER }}\",
              \"project_id\": \"${{ secrets.FIREBASE_PROJECT_ID }}\",
              \"storage_bucket\": \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"
            },
            \"client\": [{
              \"client_info\": {
                \"mobilesdk_app_id\": \"${{ secrets.FIREBASE_APP_ID }}\",
                \"android_client_info\": {\"package_name\": \"com.example.visora\"}
              },
              \"api_key\": [{\"current_key\": \"${{ secrets.FIREBASE_API_KEY }}\"}]
            }],
            \"configuration_version\": \"1\"
          }" > android/app/google-services.json
          echo "✅ Firebase Config added."

      - name: Build APK
        run: |
          flutter clean
          flutter pub get
          flutter build apk --release --no-tree-shake-icons || (flutter clean && flutter pub get && flutter build apk --release)
          echo "✅ Build completed successfully!"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: VisoraAI-Cloud-Release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload to Cloud Backup (Google Drive)
        if: ${{ secrets.RCLONE_CONF != '' }}
        run: |
          sudo apt-get install -y rclone
          echo "${{ secrets.RCLONE_CONF }}" > ~/.config/rclone/rclone.conf
          rclone copy build/app/outputs/flutter-apk/app-release.apk "mydrive:/VisoraAI/CloudBuilds/"
          echo "☁️ APK backed up to Google Drive successfully!"

      - name: Publish to GitHub Releases
        if: startsWith(github.ref, 'refs/heads/main')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: v${{ github.run_number }}
          name: "Visora AI Cloud Build #${{ github.run_number }}"
          body: |
            ✅ Visora AI Cloud Build Successful!
            🔹 Gradle 8.x + Kotlin 1.9.25
            🔹 Pub Cache Fixed
            🔹 Firebase Ready
            🔹 Auto Icons + Themes
            🔹 Full Cloud Compatible
